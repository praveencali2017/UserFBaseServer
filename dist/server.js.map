{"version":3,"sources":["../main/server.js"],"names":["firebase","require","userDataUrl","admin","path","dbServiceAccount","dbApp","initializeApp","credential","cert","databaseURL","dbRef","database","ref","bodyParser","express","app","use","urlencoded","extended","json","port","process","env","PORT","controller","Router","post","req","res","developerId","query","develid","name","dob","user","Object","Dob","Name","developerID","Timestamp","ServerValue","TIMESTAMP","orderByChild","equalTo","once","data","snap","val","send","CREATEFAIL","isNameAndDobEqual","then","createAndStoreUser","CREATESUCCESS","get","toLowerCase","startAt","endAt","on","USERNOTFOUND","delete","key","keys","UID","child","remove","auth","deleteUser","DELETESUCCESS","catch","DELETEFAIL","put","oName","oname","oDob","odob","result","updateUser","UPDATESUCCESS","UPDATEFAIL","listen","console","log","Promise","resolve","reject","pushId","update","msg","length","substring","createUser","userRecord","uid","pushUserToFirebase","push"],"mappings":"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","file":"server.js","sourcesContent":["/**\r\n * Web API\r\n */\r\nconst firebase = require('firebase');\r\nimport {Status} from './msg_status.js'\r\nvar userDataUrl ='https://randomuser.me/api/';\r\nvar admin = require('firebase-admin')\r\nvar path = require('path');\r\nconst dbServiceAccount = require('./../auth/firebase-admin-cred.json');\r\nvar dbApp =admin.initializeApp({\r\n            credential: admin.credential.cert(dbServiceAccount), \r\n            databaseURL: 'https://huma-eng-test.firebaseio.com/'\r\n            });\r\nvar dbRef = dbApp.database().ref('users/');\r\n\r\nconst bodyParser = require('body-parser');\r\nvar express = require('express');\r\nvar app = express();\r\n/**\r\n * Url encoding\r\n */\r\napp.use(bodyParser.urlencoded({extended:true}));\r\napp.use(bodyParser.json());\r\n\r\nvar port = process.env.PORT || 8000;\r\n\r\n\r\nvar controller = express.Router();\r\n\r\n\r\n/**\r\n * Create User\r\n */\r\ncontroller.post('/create',(req, res)=>{\r\n    var developerId = req.query.develid;\r\n    var name = req.query.name;\r\n    var dob = req.query.dob;\r\n    let user = new Object();\r\n    user.Dob=dob;\r\n    user.Name=name;\r\n    user.developerID=developerId;\r\n    user.Timestamp =firebase.database.ServerValue.TIMESTAMP;\r\n    dbRef.orderByChild('developerID').equalTo(user.developerID).once('value', snap=>{\r\n            var data =snap.val();\r\n            if(data){\r\n                res.send(Status.CREATEFAIL);\r\n            }else{\r\n                  isNameAndDobEqual(user.Name, user.Dob).then(val=>{\r\n                    if(!val){\r\n                        createAndStoreUser(user).then(result=>{\r\n                          res.send(Status.CREATESUCCESS);\r\n                        })\r\n                    }\r\n                  }); \r\n            }\r\n    });\r\n});\r\n\r\ncontroller.get('/user', (req, res)=>{\r\n    var name = req.query.name;\r\n    var developerId = req.query.develid;\r\n    if(name){\r\n        name=name.toLowerCase();\r\n        dbRef.orderByChild('Name').startAt(name).endAt(name+\"\\uf8ff\").on('value', snap=>{\r\n            if(snap.val()){\r\n                res.send(snap.val());\r\n            }else{\r\n                res.send(Status.USERNOTFOUND);\r\n            }\r\n        });\r\n    }else{\r\n        if(developerId){\r\n            dbRef.orderByChild('developerID').equalTo(developerId).on('value', snap=>{\r\n                if(snap.val()){\r\n                    res.send(snap.val());\r\n                }else{\r\n                    res.send(Status.USERNOTFOUND);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n});\r\n\r\ncontroller.delete('/user',(req, res)=>{\r\n    let name = req.query.name.toLowerCase();\r\n    let dob = req.query.dob;\r\n    isNameAndDobEqual(name, dob).then(user=>{\r\n        if(user){\r\n            let key = Object.keys(user)[0];\r\n            user = user[key];    \r\n            dbRef.orderByChild('UID').equalTo(user.UID).on('value', snap=>{\r\n                snap.child(key).ref.remove(result=>{\r\n                    dbApp.auth().deleteUser(user.UID).then(result=>{\r\n                       res.send(Status.DELETESUCCESS);\r\n                    }).catch(err=>{\r\n    \r\n                    });\r\n                });  \r\n            });\r\n        }else{\r\n            res.send(Status.DELETEFAIL);\r\n        }\r\n    });\r\n    \r\n});\r\ncontroller.put('/user',(req, res)=>{\r\n    var oName = req.query.oname;\r\n    var oDob = req.query.odob;\r\n    var name = req.query.name;\r\n    var dob = req.query.dob;\r\n    if(oName && oDob && name && dob){\r\n        isNameAndDobEqual(oName, oDob).then(result=>{\r\n            if(result){\r\n               updateUser(result, name, dob).then(status=>{\r\n                res.send(Status.UPDATESUCCESS);\r\n               });\r\n               \r\n            }else{\r\n                res.send(Status.UPDATEFAIL);\r\n            }\r\n            \r\n        });\r\n    }else{\r\n        res.send(Status.UPDATEFAIL);\r\n    }\r\n    \r\n});\r\n\r\napp.use('/', controller);\r\n\r\napp.listen(port,()=>{\r\n    console.log(\"Server started and listening.........\");\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction updateUser(user, name, dob){\r\n    return new Promise((resolve, reject)=>{\r\n        if(user){\r\n            let pushId = Object.keys(user)[0];\r\n            user = user[pushId];\r\n            dbRef.child(pushId).update({\"Name\": name, \"Dob\": dob},res=>{\r\n                if(res){   \r\n                 resolve({msg: \"Unable to update the user!!!\"}); \r\n                }else{  \r\n                 resolve({msg: \"Successfully updated the user\"});\r\n                }\r\n            }); \r\n        }\r\n    });\r\n}\r\n\r\nfunction createAndStoreUser(user){\r\n    return new Promise((resolve, reject)=>{\r\n        if(user.Name.length>=256){\r\n            user.Name.substring(0,256);\r\n        }\r\n        dbApp.auth().createUser(user)\r\n            .then(userRecord=>{\r\n                user.UID=userRecord.uid;\r\n             resolve(pushUserToFirebase(user));\r\n        });\r\n    });\r\n    \r\n}\r\n\r\nfunction pushUserToFirebase(user){\r\n   return new Promise((resolve, reject)=>{\r\n        if(dbRef!=null){\r\n            dbRef.push(user).then(res=>{\r\n                resolve(\"Successfully created the user with UID\"+user.UID)     ;\r\n            }).catch(erro=>{\r\n                resolve(\"User cannot be created, check your fields!!!\");\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nfunction isNameAndDobEqual(name, dob){\r\n    return new Promise((resolve, reject)=>{\r\n        dbRef.orderByChild('Name').equalTo(name).once('value',snap=>{\r\n            if(snap.val()){\r\n                // console.log(\"Name Matched!!!\");\r\n                dbRef.orderByChild('Dob').equalTo(dob).once('value', snap=>{\r\n                    if(snap.val()){\r\n                        let user = snap.val();\r\n                        console.log(\"isNameAndDobEqual............\");\r\n                        resolve(user);\r\n                    }else{\r\n                        console.log(\"isNameAndDobEqual......null............\");\r\n                        resolve(null);    \r\n                    }\r\n                });   \r\n            }else{\r\n            resolve(null);\r\n        }\r\n        });\r\n    });    \r\n}\r\n"]}