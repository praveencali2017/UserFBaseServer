{"version":3,"sources":["../main/test_data.js"],"names":["fetch","require","firebase","userDataUrl","admin","dbServiceAccount","dbApp","initializeApp","credential","cert","databaseURL","dbRef","database","ref","numberOfUsers","fetchUserData","Promise","resolve","reject","data","userAuth","then","res","json","console","log","users","results","forEach","firstName","user","name","first","lastName","last","developerID","login","username","email","password","dob","userDetails","Object","Name","length","useruserDetails","substring","Timestamp","ServerValue","TIMESTAMP","dobFormat","Date","Dob","getFullYear","toString","getMonth","getDate","push","pushUserToFirebase","UID"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,YAAR,CAAd;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,IAAIE,cAAa,4BAAjB;AACA,IAAIC,QAAQH,QAAQ,gBAAR,CAAZ;AACA,IAAMI,mBAAmBJ,QAAQ,oCAAR,CAAzB;AACA,IAAIK,QAAOF,MAAMG,aAAN,CAAoB;AACnBC,gBAAYJ,MAAMI,UAAN,CAAiBC,IAAjB,CAAsBJ,gBAAtB,CADO;AAEnBK,iBAAa;AAFM,CAApB,CAAX;AAIA,IAAIC,QAAQL,MAAMM,QAAN,GAAiBC,GAAjB,CAAqB,OAArB,CAAZ;AACA,IAAIC,gBAAe,CAAnB;;AAEA;;;;AAIA,SAASC,aAAT,CAAuBD,aAAvB,EAAqC;AAClC,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACjC,YAAIC,OAAK,EAAT;AACA,YAAIC,WAAU,EAAd;AACApB,cAAMG,cAAY,WAAZ,GAAwBW,aAA9B,EAA6CO,IAA7C,CAAkD;AAAA,mBAAKC,IAAIC,IAAJ,EAAL;AAAA,SAAlD,EAAmEF,IAAnE,CAAwE,iBAAO;AAC3EG,oBAAQC,GAAR,CAAYC,KAAZ;AACAA,kBAAMC,OAAN,CAAcC,OAAd,CAAsB,gBAAM;AACxB,oBAAIC,YAAYC,KAAKC,IAAL,CAAUC,KAA1B;AACA,oBAAIC,WAAWH,KAAKC,IAAL,CAAUG,IAAzB;AACA,oBAAIC,cAAcL,KAAKM,KAAL,CAAWC,QAA7B;AACA,oBAAIC,QAAQH,WAAZ;AACA,oBAAII,WAAWT,KAAKM,KAAL,CAAWG,QAA1B;AACA,oBAAIC,MAAMV,KAAKU,GAAf;AACA,oBAAIC,cAAc,IAAIC,MAAJ,EAAlB;AACAD,4BAAYE,IAAZ,GAAkBd,YAAU,GAAV,GAAcI,QAAhC;AACA,oBAAGQ,YAAYG,MAAZ,IAAoB,GAAvB,EAA2B;AACvBC,oCAAgBd,IAAhB,CAAqBe,SAArB,CAA+B,CAA/B,EAAiC,GAAjC;AACH;AACDL,4BAAYM,SAAZ,GAAwB7C,SAASU,QAAT,CAAkBoC,WAAlB,CAA8BC,SAAtD;AACAR,4BAAYN,WAAZ,GAA0BA,WAA1B;AACA,oBAAIe,YAAY,IAAIC,IAAJ,CAASX,GAAT,CAAhB;AACAC,4BAAYW,GAAZ,GAAiBF,UAAUG,WAAV,GAAwBC,QAAxB,KAAmC,CAACJ,UAAUK,QAAV,KAAqB,CAAtB,EAAyBD,QAAzB,EAAnC,GAAuEJ,UAAUM,OAAV,GAAoBF,QAApB,EAAxF;AACAnC,qBAAKsC,IAAL,CAAUhB,WAAV;AACC,aAjBL;AAkBAxB,oBAAQE,IAAR;AACH,SArBD;AAsBH,KAzBK,CAAP;AA0BF;;AAED,SAASuC,kBAAT,CAA4B5B,IAA5B,EAAiC;AAC7B,QAAGnB,SAAO,IAAV,EAAe;AACXA,cAAM8C,IAAN,CAAW3B,IAAX,EAAiBT,IAAjB,CAAsB,eAAK;AACxBG,oBAAQC,GAAR,CAAY,2CAAyCK,KAAK6B,GAA1D;AACF,SAFD;AAGH;AACJ;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"test_data.js","sourcesContent":["const fetch = require('node-fetch');\r\nconst firebase = require('firebase');\r\nvar userDataUrl ='https://randomuser.me/api/';\r\nvar admin = require('firebase-admin')\r\nconst dbServiceAccount = require('./../auth/firebase-admin-cred.json');\r\nvar dbApp =admin.initializeApp({\r\n            credential: admin.credential.cert(dbServiceAccount), \r\n            databaseURL: 'https://huma-eng-test.firebaseio.com/'\r\n            });\r\nvar dbRef = dbApp.database().ref('users');\r\nvar numberOfUsers =5;\r\n\r\n/**\r\n * Function to fetch users from randomuser API\r\n * @param {number of users required} numberOfUsers \r\n */\r\nfunction fetchUserData(numberOfUsers){\r\n   return new Promise((resolve, reject)=>{\r\n        var data=[];\r\n        var userAuth =[];\r\n        fetch(userDataUrl+'?results='+numberOfUsers).then(res=>res.json()).then(users=>{\r\n            console.log(users);\r\n            users.results.forEach(user=>{\r\n                let firstName = user.name.first;\r\n                let lastName = user.name.last;\r\n                let developerID = user.login.username;\r\n                let email = developerID;\r\n                let password = user.login.password;\r\n                let dob = user.dob;\r\n                let userDetails = new Object();\r\n                userDetails.Name =firstName+\" \"+lastName;\r\n                if(userDetails.length>=256){\r\n                    useruserDetails.name.substring(0,256);\r\n                }\r\n                userDetails.Timestamp = firebase.database.ServerValue.TIMESTAMP;\r\n                userDetails.developerID = developerID;\r\n                let dobFormat = new Date(dob);\r\n                userDetails.Dob =dobFormat.getFullYear().toString()+(dobFormat.getMonth()+1).toString()+dobFormat.getDate().toString();\r\n                data.push(userDetails);\r\n                }); \r\n            resolve(data);\r\n        });\r\n    });    \r\n}\r\n\r\nfunction pushUserToFirebase(user){\r\n    if(dbRef!=null){\r\n        dbRef.push(user).then(res=>{\r\n           console.log(\"Successfully created the user with UID\"+user.UID);     \r\n        });\r\n    }\r\n}\r\n\r\n/**Fetch user details**/\r\n// fetchUserData(numberOfUsers).then(data=>{\r\n//     data.forEach(user=>{\r\n//         dbApp.auth().createUser(user)\r\n//         .then(userRecord=>{\r\n//             user.UID=userRecord.uid;\r\n//             pushUserToFirebase(user);\r\n//         });  \r\n//         // console.log(user);\r\n//     });\r\n// })\r\n// .catch(error=>{\r\n//     console.log(error)\r\n// });\r\n\r\n\r\n\r\n"]}